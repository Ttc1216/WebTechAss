// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WebTech.Shared.Models
{
    public partial class autismDBContext : DbContext
    {
        public autismDBContext()
        {
        }

        public autismDBContext(DbContextOptions<autismDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Language> Language { get; set; }
        public virtual DbSet<Resource> Resource { get; set; }
        public virtual DbSet<ResourceAgeRange> ResourceAgeRange { get; set; }
        public virtual DbSet<ResourceAttachment> ResourceAttachment { get; set; }
        public virtual DbSet<ResourceCategory> ResourceCategory { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=autismDB;Integrated Security=true");

            modelBuilder.Entity<Language>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Resource>(entity =>
            {
                entity.Property(e => e.Name).HasMaxLength(50);

                entity.HasOne(d => d.ResourceAgeRange)
                    .WithMany(p => p.Resource)
                    .HasForeignKey(d => d.ResourceAgeRangeId)
                    .HasConstraintName("FK_Resource_ToResourceAgeRange");

                entity.HasOne(d => d.ResourceCategory)
                    .WithMany(p => p.Resource)
                    .HasForeignKey(d => d.ResourceCategoryId)
                    .HasConstraintName("FK_Resource_ToResourceCategory");
            });

            modelBuilder.Entity<ResourceAgeRange>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ResourceAttachment>(entity =>
            {
                entity.Property(e => e.FileName).IsRequired();

                entity.Property(e => e.FilePath).IsRequired();

                entity.HasOne(d => d.Language)
                    .WithMany(p => p.ResourceAttachment)
                    .HasForeignKey(d => d.LanguageId)
                    .HasConstraintName("FK_ResourceAttachment_ToLanguage");

                entity.HasOne(d => d.Resource)
                    .WithMany(p => p.ResourceAttachment)
                    .HasForeignKey(d => d.ResourceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ResourceAttachment_ToResource");
            });

            modelBuilder.Entity<ResourceCategory>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}